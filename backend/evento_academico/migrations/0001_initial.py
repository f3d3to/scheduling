# Generated by Django 5.1.5 on 2025-02-04 17:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActividadPlanificada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completada', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EventoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sábado', 'Sábado'), ('Domingo', 'Domingo')], max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('descripcion_horario', models.TextField(blank=True)),
                ('es_obligatorio', models.BooleanField(default=True)),
                ('recursos', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Eventos académicos',
                'ordering': ['materia', 'dia', 'hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='EventoCalendarioAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('inicio', models.DateTimeField()),
                ('fin', models.DateTimeField(blank=True, null=True)),
                ('todo_el_dia', models.BooleanField(default=False)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('background_color', models.CharField(blank=True, max_length=20, null=True)),
                ('border_color', models.CharField(blank=True, max_length=20, null=True)),
                ('text_color', models.CharField(blank=True, max_length=20, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MetaAcademica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=255)),
                ('tipo', models.CharField(max_length=20)),
                ('completada', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PlanificacionAcademica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('SEMANAL', 'Semanal'), ('CUATRIMESTRAL', 'Cuatrimestral'), ('ANUAL', 'Anual')], max_length=20)),
                ('cuatrimestre', models.CharField(blank=True, choices=[('1', 'Cuatrimestre 1'), ('2', 'Cuatrimestre 2')], max_length=1, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('semana', models.PositiveIntegerField(blank=True, null=True)),
                ('año', models.PositiveIntegerField(default=2025)),
            ],
            options={
                'verbose_name_plural': 'Planificaciones Académicas',
            },
        ),
        migrations.CreateModel(
            name='ProgresoMateria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completados', models.PositiveIntegerField(default=0)),
                ('totales', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Recordatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.CharField(max_length=200)),
                ('fecha_hora', models.DateTimeField()),
                ('repetir', models.CharField(choices=[('UNA_VEZ', 'Una vez'), ('DIARIO', 'Diario'), ('SEMANAL', 'Semanal'), ('MENSUAL', 'Mensual')], default='UNA_VEZ', max_length=10)),
                ('medio_de_notificacion', models.CharField(choices=[('EMAIL', 'Email'), ('PUSH', 'Notificación push'), ('SMS', 'Mensaje SMS')], default='PUSH', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Recurrencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frecuencia', models.CharField(choices=[('diaria', 'Diaria'), ('semanal', 'Semanal'), ('mensual', 'Mensual'), ('anual', 'Anual')], max_length=20)),
                ('intervalo', models.PositiveIntegerField(default=1)),
                ('fin_recurrencia', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoEventoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=255)),
            ],
        ),
    ]
