# Generated by Django 5.1.4 on 2024-12-20 05:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del estado (por ejemplo, Pendiente, En Progreso, Completado).', max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción opcional del estado.', null=True)),
                ('color', models.CharField(default='#FFFFFF', help_text='Color asociado al estado.', max_length=7)),
                ('orden', models.PositiveIntegerField(default=0, help_text='Orden de prioridad del estado.')),
            ],
            options={
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='TipoPlanificador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del tipo de planificador.', max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EstructuraPlanificador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la estructura (por ejemplo, Plan Semanal, Plan Mensual, Control de Estudio).', max_length=100)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción opcional de la estructura.', null=True)),
                ('configuracion', models.JSONField(help_text="Configuración dinámica en formato JSON. Por ejemplo, {'tipo': 'tabla', 'columnas': ['Lunes', 'Martes'], 'filas': ['8:00', '9:00']}.")),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación de la estructura.')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, help_text='Última modificación de la estructura.')),
                ('usuario', models.ForeignKey(help_text='Usuario que creó esta configuración.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Planificador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del planificador.', max_length=255)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del planificador.', null=True)),
                ('color', models.CharField(default='#FFFFFF', help_text='Color asociado al planificador.', max_length=7)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del planificador.')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, help_text='Fecha de última modificación del planificador.')),
                ('estructura', models.ForeignKey(blank=True, help_text='Estructura dinámica asociada al planificador.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='planificadores.estructuraplanificador')),
                ('usuario', models.ForeignKey(help_text='Usuario propietario del planificador.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tipo', models.ForeignKey(blank=True, help_text='Tipo de Planificador asociada al planificador.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='planificadores.tipoplanificador')),
            ],
        ),
        migrations.CreateModel(
            name='Objetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('fecha_objetivo', models.DateField()),
                ('completado', models.BooleanField(default=False)),
                ('planificador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objetivos', to='planificadores.planificador')),
            ],
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_cambio_estado', models.DateTimeField(auto_now=True, help_text='Fecha del último cambio de estado.')),
                ('nombre', models.CharField(help_text='Nombre de la actividad.', max_length=255)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de la actividad.', null=True)),
                ('fecha_inicio', models.DateField(blank=True, help_text='Fecha de inicio de la actividad.', null=True)),
                ('fecha_fin', models.DateField(blank=True, help_text='Fecha de finalización de la actividad.', null=True)),
                ('color', models.CharField(default='#0000FF', help_text='Color asociado a la actividad.', max_length=7)),
                ('estado', models.ForeignKey(blank=True, help_text='Estado actual de la entidad.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='planificadores.estado')),
                ('planificador', models.ForeignKey(help_text='Planificador al que pertenece la actividad.', on_delete=django.db.models.deletion.CASCADE, related_name='actividades', to='planificadores.planificador')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistroProgreso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porcentaje', models.DecimalField(decimal_places=2, help_text='Porcentaje de progreso.', max_digits=5)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, help_text='Fecha en que se registró el progreso.')),
                ('actividad', models.ForeignKey(help_text='Actividad asociada al registro.', on_delete=django.db.models.deletion.CASCADE, related_name='registros_progreso', to='planificadores.actividad')),
            ],
        ),
        migrations.CreateModel(
            name='Tarea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_cambio_estado', models.DateTimeField(auto_now=True, help_text='Fecha del último cambio de estado.')),
                ('nombre', models.CharField(help_text='Nombre de la tarea.', max_length=255)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de la tarea.', null=True)),
                ('fecha_limite', models.DateField(blank=True, help_text='Fecha límite para completar la tarea.', null=True)),
                ('color', models.CharField(default='#FF0000', help_text='Color asociado a la tarea.', max_length=7)),
                ('actividad', models.ForeignKey(help_text='Actividad asociada.', on_delete=django.db.models.deletion.CASCADE, related_name='tareas', to='planificadores.actividad')),
                ('estado', models.ForeignKey(blank=True, help_text='Estado actual de la entidad.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='planificadores.estado')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
